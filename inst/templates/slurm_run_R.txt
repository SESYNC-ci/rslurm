{{#libPaths}}.libPaths(c('{{.}}', .libPaths()))
{{/libPaths}}
{{#pkgs}}library({{.}}, quietly = TRUE)
{{/pkgs}}

{{#add_obj}}
load('add_objects.RData')
{{/add_obj}}

.rslurm_func <- readRDS('f.RDS')
.rslurm_params <- readRDS('params.RDS')
.rslurm_id <- as.numeric(Sys.getenv('SLURM_ARRAY_TASK_ID'))
.rslurm_istart <- .rslurm_id * {{{nchunk}}} + 1
.rslurm_iend <- min((.rslurm_id + 1) * {{{nchunk}}}, nrow(.rslurm_params))
.cl <- makeCluster({{{cpus_per_node}}}, outfile = '')
parallel::setDefaultCluster(.cl)
.rslurm_result <- do.call(parallel::clusterMap,
                          c(fun = .rslurm_func,
                            .scheduling = 'dynamic',
                            .rslurm_params[.rslurm_istart:.rslurm_iend, ,
                                           drop = FALSE]))
stopCluster(.cl)
saveRDS(.rslurm_result, file = paste0('results_', .rslurm_id, '.RDS'))
